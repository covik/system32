name: 'CI'

on:
  pull_request:
    paths-ignore:
      - .github/workflows/devcontainer.yaml
      - renovate.json
  push:
    paths-ignore:
      - .github/workflows/devcontainer.yaml
      - renovate.json
    branches:
      - main

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest@${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: ci
          push: true
          provenance: false
          labels: ''
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  lint:
    name: 'Lint'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: read
    container:
      image: ${{ needs.build.outputs.image_tag }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: /app
    steps:
      - name: Format
        run: yarn format:check

      - name: Lint
        run: yarn lint

  preview:
    name: 'Preview'
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      pull-requests: write
    container:
      image: ${{ needs.build.outputs.image_tag }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Enrich Pulumi Console data with repository information
        run: cp -R .git /app/.git && cd /app && git reset --hard # files from .dockerignore appear as [deleted] in git status

      - name: Pulumi Preview
        uses: pulumi/actions@v6
        with:
          work-dir: /app
          stack-name: cromanjonac
          command: preview
          comment-on-pr: true
          edit-pr-comment: true
          always-include-summary: true
          comment-on-summary: true
          suppress-progress: true

  deploy:
    name: 'Deploy'
    needs: [build, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    concurrency: 'deploy'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      pull-requests: write
    container:
      image: ${{ needs.build.outputs.image_tag }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Enrich Pulumi Console data with repository information
        run: cp -R .git /app/.git && cd /app && git reset --hard # files from .dockerignore appear as [deleted] in git status

      - name: Pulumi Up (Deploy to Production)
        uses: pulumi/actions@v6
        with:
          work-dir: /app
          stack-name: cromanjonac
          command: up
          refresh: true
          comment-on-summary: true

      - name: Cancel update on failure
        if: failure() || cancelled()
        run: pulumi cancel --yes --stack cromanjonac

      - run: cd /app && git status
