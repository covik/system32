name: Devcontainer

on:
  pull_request:
    branches:
      - main
    paths:
      - .devcontainer/**
      - .github/workflows/devcontainer.yaml
  push:
    branches:
      - main
    paths:
      - .devcontainer/**
      - .github/workflows/devcontainer.yaml
  workflow_dispatch:

concurrency:
  group: devcontainer-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/devcontainer
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Decide flags
        id: flags
        run: |
          if [[ ("${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main") || 
                ("${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}") ]]; then
            echo "should_push=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_push=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Compute tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr

      - name: Log in to GitHub Container Registry
        if: steps.flags.outputs.should_push == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: dev
          push: ${{ steps.flags.outputs.should_push == 'true' }}
          tags: ${{ steps.metadata.outputs.tags }}
          outputs: type=registry,oci-mediatypes=true,oci-artifact=true
          cache-from: type=gha,scope=devcontainer-{branch?}-{os?}
          cache-to: type=gha,mode=max,scope=devcontainer-{branch?}-{os?}
          provenance: false
          labels: ''
          sbom: false
        env:
          SOURCE_DATE_EPOCH: 0
          BUILDKIT_PROGRESS: 'rawjson'

      - name: Print build results
        if: steps.flags.outputs.should_push == 'true'
        run: |
          echo "Pushed tags: ${{ steps.metadata.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"
    outputs:
      should_push: ${{ steps.flags.outputs.should_push }}
      image_tag: ${{ steps.metadata.outputs.tags }}@${{ steps.build.outputs.digest }}

  smoke:
    name: 'Smoke test'
    needs: [build]
    if: ${{ needs.build.outputs.should_push == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v5

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pin devcontainer.json image to built digest
        run: |
          jq --arg img "${{ needs.build.outputs.image_tag }}" \
             '.image = $img' .devcontainer/devcontainer.json > .devcontainer/devcontainer.json.tmp \
          && mv .devcontainer/devcontainer.json.tmp .devcontainer/devcontainer.json

      - name: Smoke test
        uses: devcontainers/ci@v0.3
        with:
          push: never
          runCmd: |
            set -e
            node --version
            yarn --version
            pulumi version
            whoami
            pwd
            ls -lah
            yarn format
            pulumi plugin ls
            echo "permission test" > "$PULUMI_HOME/test.txt"
            ls -lah "$PULUMI_HOME"
            ls -lah "$HOME"

  comment:
    name: 'PR comment'
    needs: [build]
    if: ${{ github.event_name == 'pull_request' &&
      github.event.action != 'closed' &&
      github.event.pull_request.head.repo.full_name == github.repository &&
      needs.build.outputs.should_push == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        id: existing_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- devcontainer-image-comment -->'

      - name: Upsert comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.existing_comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- devcontainer-image-comment -->
            ### Devcontainer image ([CI #${{ github.run_number }}-${{ github.run_attempt }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}))

            ```text
            ${{ needs.build.outputs.image_tag }}
            ```
