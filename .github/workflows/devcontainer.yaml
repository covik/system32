name: Devcontainer

on:
  pull_request:
    branches:
      - main
    paths:
      - .devcontainer/**
      - .github/workflows/devcontainer.yaml
  push:
    branches:
      - main
    paths:
      - .devcontainer/**
      - .github/workflows/devcontainer.yaml
  workflow_dispatch:

concurrency:
  group: devcontainer-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build container image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/devcontainer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute tags
        id: tags
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "should_push=true" >> $GITHUB_OUTPUT
            echo "tags=${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:main-${SHORT_SHA}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}" ]]; then
              echo "should_push=true" >> $GITHUB_OUTPUT
              echo "tags=${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            else
              echo "should_push=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_push=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        if: steps.tags.outputs.should_push == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: ${{ steps.tags.outputs.should_push == 'true' }}
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: ${{ format('type=registry,ref={0}:buildcache', env.IMAGE_NAME) }}
          cache-to: ${{ steps.tags.outputs.should_push == 'true' && format('type=registry,ref={0}:buildcache,mode=max', env.IMAGE_NAME) || '' }}
          provenance: ${{ steps.tags.outputs.should_push }}
          sbom: ${{ steps.tags.outputs.should_push }}

      - name: Show tags & digest
        if: steps.tags.outputs.should_push == 'true'
        run: |
          echo "Pushed tags: ${{ steps.tags.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"

    outputs:
      should_push: ${{ steps.tags.outputs.should_push }}
      tags: ${{ steps.tags.outputs.tags }}
      digest: ${{ steps.build.outputs.digest }}

  comment:
    name: 'PR comment'
    needs: [build]
    if: >
      ${{
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name == github.repository &&
        needs.build.outputs.should_push == 'true'
      }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Upsert PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### Devcontainer image ([CI #${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}))

            `${{ needs.build.outputs.tags }}@${{ needs.build.outputs.digest }}`
