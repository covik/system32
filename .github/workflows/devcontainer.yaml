name: 'Devcontainer'

on:
  pull_request:
    paths-ignore:
      - .github/workflows/ci.yaml
  push:
    paths-ignore:
      - .github/workflows/ci.yaml
    branches:
      - main

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/devcontainer:latest@${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: dev
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/devcontainer:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  validate:
    name: 'Validate'
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      IMAGE_REFERENCE: ${{ needs.build.outputs.image_tag }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Alter image of the devcontainer.json
        working-directory: .devcontainer
        run: |
          set -e
          echo $IMAGE_REFERENCE
          jq --version
          jq --arg image "$IMAGE_REFERENCE" '.image = $image' devcontainer.json > devcontainer.tmp.json && mv devcontainer.tmp.json devcontainer.json

      - name: Sanity check
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            set -e
            node --version
            yarn --version
            pulumi version
            whoami
            pwd
            ls -lah
            yarn format # jq alters the format
            pulumi plugin ls

      - name: Upload modified devcontainer.json
        uses: actions/upload-artifact@v4
        with:
          name: devcontainer
          path: .devcontainer/devcontainer.json
          if-no-files-found: error
          compression-level: 0
          overwrite: true

  check_changes:
    name: 'Check for devcontainer.json changes'
    needs: [validate]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      changes_exist: ${{ steps.compare.outputs.changes_exist }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download modified devcontainer.json
        uses: actions/download-artifact@v4
        with:
          name: devcontainer
          path: ./modified_devcontainer

      - name: Compare devcontainer.json
        id: compare
        run: |
          # Compare the original and modified devcontainer.json
          if cmp -s .devcontainer/devcontainer.json ./modified_devcontainer/devcontainer.json; then
            echo "No changes detected in devcontainer.json."
            echo "changes_exist=false" >> $GITHUB_OUTPUT
            echo "No changes were made to devcontainer.json." > devcontainer_diff.txt
          else
            echo "Changes detected in devcontainer.json."
            echo "changes_exist=true" >> $GITHUB_OUTPUT
            # Generate the diff
            git diff --no-prefix .devcontainer/devcontainer.json ./modified_devcontainer/devcontainer.json > devcontainer_diff.txt
          fi

      - name: Add git diff to Job Summary
        run: |
          echo "### Changes in devcontainer.json" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.compare.outputs.changes_exist }}" == "true" ]; then
            echo '```diff' >> $GITHUB_STEP_SUMMARY
            cat devcontainer_diff.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "No changes were made to devcontainer.json." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Output changes_exist
        run: |
          echo "Changes exist: ${{ steps.compare.outputs.changes_exist }}"

  commit:
    name: 'Commit & push'
    needs: [validate]
    if: needs.check_changes.outputs.changes_exist == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Download modified devcontainer.json
        uses: actions/download-artifact@v4
        with:
          name: devcontainer
          path: .devcontainer

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git config commit.gpgsign true
          git add .devcontainer/devcontainer.json
          git commit -m "chore(workspace): update image in devcontainer.json"
          git push origin HEAD:${{ github.ref_name }}

      - name: Add confirmation to job summary
        run: |
          echo "### Commit Status" >> $GITHUB_STEP_SUMMARY
          echo "Changes to devcontainer.json have been committed and pushed." >> $GITHUB_STEP_SUMMARY
